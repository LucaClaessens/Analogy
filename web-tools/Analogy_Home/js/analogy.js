var stickyNavTop;

var textitems = [
    "<h4>Content Production</h4><p>We aggregate information based on the needs of a publishing enterprise, be that involved with books, event, exhibitions. To do so, we require access to the content produced by the enterprise. We’re equipped to scrape and compile additional information on the fly. </p> \
<p>This source material will be ran through a set of algorythms and eventually be compiled into a dataset suitable for machine learning purposes; we grow a set of unique networks from scratch for every use case, ensuring suitable content can be produced. </p>",
    "<h4>Automated Editing</h4><p>In our test case with the <strong>Moneylab</strong> we’ve decided to use a combination of these three methods, creating an interactive setup that would make the crowd publish a list of suggestions for relevant new themes and predictions on the fields the event was focused on.</p>",
    "<h4>Outsourced Design</h4><p>We possess a vast array of options to pick from in terms of outsourcing the Design component of the process. From outsourcing to machines, to crowdsourcing platforms, to a simple file conversion, or all of these at once and others, the key component of our design strategy is that \
there should be almost no design work necessary, of course, for as close to zero spending as possible. </p>",
    "<h4>Ad-sponsored Printing</h4><p>Where neccesary, we can employ tactics garnered from a big chunk of the big media outlets out there, additional to the original data we can embed advertising, at either embedded or native level into the product, paying for part of the production process.<em> \
</em>be warned, not every publication is suitable for this setup!</p>",
    "<h4>Smart Sales & Distribution</h4><p>The main objective of our process is, of course, to make sure the publication makes it into the hands of readers and generates revenue. For this, we employ an array of different techniques similar to those of established online platform models such as Spotify. \
Some options that we advise our clients to consider are the use of the Freemium model, different types of Paywalls, generating revenue party through Advertising and monetising through taking advantage of all the Data generated by the company.</p> \
<p>Since no company is the same, we create personalised strategies by devising the best combination of models for each specific client.</p>"
];

var testimonialitems = [ // Geert, Mirjam, Inte
"Exploiting the exploiters, Analogy is the Robin Hood amongst publishers. That’s what we all need.", "The best thing, to me, is that for once a startup is not trying to reinvent the wheel.", "I don't think computers can write good books, but I support that someone is putting in the energy to prove me wrong."
];


(function($) {

    /**
     * Copyright 2012, Digital Fusion
     * Licensed under the MIT license.
     * http://teamdf.com/jquery-plugins/license/
     *
     * @author Sam Sehnert
     * @desc A small plugin that checks whether elements are within
     *     the user visible viewport of a web browser.
     *     only accounts for vertical position, not horizontal.
     */

    $.fn.visible = function(partial) {

        var $t = $(this),
            $w = $(window),
            viewTop = $w.scrollTop(),
            viewBottom = viewTop + $w.height() - 80,
            _top = $t.offset().top,
            _bottom = _top + $t.height(),
            compareTop = partial === true ? _bottom : _top,
            compareBottom = partial === true ? _top : _bottom;

        return ((compareBottom <= viewBottom) && (compareTop >= viewTop));

    };

})(jQuery);

function checkfade() {
    $(".fadein").each(function(i, el) {
        var el = $(el);
        if (el.visible(true)) {
            el.addClass("faded-in");
        }
    });
}

function checkblur() {
    $(".topic_parallax").each(function(i, el) {
        var el = $(el);
        if (el.visible(true)) {
            $('.st_parallax').addClass("st_blur");
        } else {
            $('.st_parallax').removeClass("st_blur");
        }
    });
}

function checkread() {
    $(".readmore").each(function(i, el) {
        var el = $(el);
        if (el.visible(true)) {
            el.fadeIn(1000);
        }
    });
}

$(window).scroll(function(event) {
    stickyNav();
    checkblur();
    checkfade();
    checkread();

});

$(document).ready(function() {
    stickyNavTop = $('nav').offset().top+80;
    stickyNav();
    checkfade();
    checkblur();
    checkread();
});

    var stickyNav = function() {
        var scrollTop = $(window).scrollTop();

        if (scrollTop > stickyNavTop) {
            $('nav').addClass('sticky');
        } else {
            $('nav').removeClass('sticky');
        }
    };

function setSVGListener(item) {

    item.addEventListener('mouseenter', function(e) {
        e.preventDefault();
        var render_on_right = e.screenX <= (window.innerWidth / 2);
        var render_on_top = e.screenY >= (window.innerHeight / 2);
        var offset = $('#steps-svg').offset();
        var modal = document.getElementById("summonmodal");
        modal.style.display = 'block';

        var objs = ['itemdesc_cp', 'itemdesc_ae', 'itemdesc_od', 'itemdesc_sp', 'itemdesc_sd', 'itemdesc_cp']
        var pick = objs.indexOf(item.id);
        /* CONTINUE HERE */
        html = textitems[pick];

        modal.innerHTML = html;

        height = $('summonmodal').height();

        if (render_on_right) {
            modal.style.left = (e.screenX - (e.screenX/10)) + 'px';
            modal.style.right = 'auto';
        } else {
            modal.style.left = 'auto'
            modal.style.right = window.innerWidth - (e.screenX - (e.screenX/10)) + 'px';
        }
        if (render_on_top) {
            console.log('top');
            modal.style.bottom = window.innerHeight - (e.screenY) + 'px';
            modal.style.top = 'auto';
        } else {
            modal.style.bottom = 'auto';
            modal.style.top=  e.screenY - 20 + 'px';
        }
    });

    item.addEventListener('mouseleave', function(e) {
        e.preventDefault();
        var modal = document.getElementById("summonmodal");
        modal.style.display = 'none';
    });

}

function setImageComment(item, image_i) {

    item.addEventListener('mouseenter', function(e) {
        e.preventDefault();
        console.log(e.screenX, e.screenY)
        var render_on_right = e.screenX < (window.innerWidth / 2);
        var render_on_bottom = e.screenY < (window.innerHeight / 2);
        var modal = document.getElementById("summonmodal");
        modal.style.display = 'block';

        if (render_on_right) {
            console.log('right')
            modal.style.left = (e.screenX) + 'px';
            modal.style.right = 'auto';
        } else {
            modal.style.left = 'auto'
            modal.style.right = window.innerWidth - (e.screenX) + 'px';
        }
        if (render_on_bottom) {
            console.log('bottom');
            modal.style.top=  e.screenY - 20 + 'px';
            modal.style.top = 'auto';
        } else {
            modal.style.top = 'auto';
            modal.style.bottom = window.innerHeight - (e.screenY) + 'px';
        }

        html = testimonialitems[image_i];
        var names = ['Geert Lovink', 'Miriam Rasch', 'Inte Gloerich']
        modal.innerHTML = "<h3 class='ntop'>&ldquo;"+html+"&rdquo;</h3><h4 class='ntop'>-"+names[image_i]+"</h4>";
    });

    item.addEventListener('mouseleave', function(e) {
        e.preventDefault();
        var modal = document.getElementById("summonmodal");
        modal.style.display = 'none';
    });

}

window.onload = function() {


    if ($('#steps-svg').length > 0){
        var a = document.getElementById("steps-svg");
        var svgDoc = a.contentDocument;
        var svgItems = svgDoc.getElementsByClassName('itemdesc');
        console.log(svgItems);
        for (var i = 0; i < 5; i++) {
            setSVGListener(svgItems[i])
        }
    }

    if ($('#testimonial-svg').length > 0){
        var a = document.getElementById("testimonial-svg");
        var svgDoc = a.contentDocument;
        var svgItems = svgDoc.getElementsByClassName('svgimage');
        console.log(svgItems);
        for (var i = 0; i < 3; i++) {
            setImageComment(svgItems[i], i)
        }
    }

};
